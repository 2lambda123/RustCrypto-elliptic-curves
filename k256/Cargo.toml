[package]
name = "k256"
version = "0.12.0-pre.0"
description = """
secp256k1 elliptic curve library written in pure Rust with support for ECDSA
signing/verification/public-key recovery, Taproot Schnorr signatures,
Elliptic Curve Diffie-Hellman (ECDH), and general-purpose secp256k1 elliptic
curve group operations which can be used to implement arbitrary protocols
"""
authors = ["RustCrypto Developers"]
license = "Apache-2.0 OR MIT"
documentation = "https://docs.rs/k256"
repository = "https://github.com/RustCrypto/elliptic-curves/tree/master/k256"
readme = "README.md"
categories = ["cryptography", "cryptography::cryptocurrencies", "no-std"]
keywords = ["bitcoin", "crypto", "ecc", "ethereum", "secp256k1"]
edition = "2021"
rust-version = "1.57"

[dependencies]
cfg-if = "1.0"
elliptic-curve = { version = "0.12.3", default-features = false, features = ["hazmat", "sec1"] }

# optional dependencies
ecdsa-core = { version = "=0.15.0-pre.0", package = "ecdsa", optional = true, default-features = false, features = ["der"] }
hex-literal = { version = "0.3", optional = true }
serdect = { version = "0.1", optional = true, default-features = false }
sha2 = { version = "0.10", optional = true, default-features = false }

[dev-dependencies]
blobby = "0.3"
criterion = "0.4"
ecdsa-core = { version = "=0.15.0-pre.0", package = "ecdsa", default-features = false, features = ["dev"] }
hex-literal = "0.3"
num-bigint = "0.4"
num-traits = "0.2"
proptest = "1.0"
rand_core = { version = "0.6", features = ["getrandom"] }
sha3 = { version = "0.10", default-features = false }

[features]
default = ["arithmetic", "ecdsa", "pkcs8", "schnorr", "std"]
alloc = ["elliptic-curve/alloc"]
std = ["alloc", "ecdsa-core/std", "elliptic-curve/std"] # TODO: use weak activation for `ecdsa-core/std` when available

arithmetic = ["elliptic-curve/arithmetic"]
bits = ["arithmetic", "elliptic-curve/bits"]
digest = ["ecdsa-core/digest", "ecdsa-core/hazmat"]
ecdh = ["arithmetic", "elliptic-curve/ecdh"]
ecdsa = ["arithmetic", "ecdsa-core/sign", "ecdsa-core/verify", "sha256"]
expose-field = ["arithmetic"]
hash2curve = ["arithmetic", "elliptic-curve/hash2curve"]
jwk = ["elliptic-curve/jwk"]
pem = ["ecdsa-core/pem", "elliptic-curve/pem", "pkcs8"]
pkcs8 = ["ecdsa-core/pkcs8", "elliptic-curve/pkcs8"]
schnorr = ["arithmetic", "sha256"]
serde = ["ecdsa-core/serde", "elliptic-curve/serde", "serdect"]
sha256 = ["digest", "sha2"]
test-vectors = ["hex-literal"]

[package.metadata.docs.rs]
features = ["ecdh", "ecdsa", "schnorr"]
rustdoc-args = ["--cfg", "docsrs"]

[[bench]]
name = "ecdsa"
harness = false
required-features = ["ecdsa", "sha256"]

[[bench]]
name = "field"
harness = false
required-features = ["expose-field"]

[[bench]]
name = "scalar"
harness = false
