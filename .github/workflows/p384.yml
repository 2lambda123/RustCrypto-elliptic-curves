name: p384

on:
  pull_request:
    paths:
      - "p384/**"
      - "tests/p384_no_std/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: p384

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.46.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    defaults:
      run:
        working-directory: tests/p384_no_std
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - run: cp ../../Cargo.lock .. # Use same Cargo.lock resolution that's checked in
      - run: cargo build --release --target ${{ matrix.target }}
      - run: cargo build --release --target ${{ matrix.target }} --features ecdsa
      - run: cargo build --release --target ${{ matrix.target }} --features pkcs8
      - run: cargo build --release --target ${{ matrix.target }} --features sha384
      - run: cargo build --release --target ${{ matrix.target }} --all-features
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.46.0 # MSRV
          - stable
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
    - run: cargo check --all-features
    - run: cargo test --no-default-features
    - run: cargo test
    - run: cargo test --all-features
