name: k256

on:
  pull_request:
    paths:
      - "k256/**"
      - "tests/k256_no_std/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: k256

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.44.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    defaults:
      run:
        working-directory: tests/k256_no_std
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - run: cp ../../Cargo.lock .. # Use same Cargo.lock resolution that's checked in
      - run: cargo build --release --target ${{ matrix.target }}
      - run: cargo build --release --target ${{ matrix.target }} --features arithmetic
      - run: cargo build --release --target ${{ matrix.target }} --features ecdh
      - run: cargo build --release --target ${{ matrix.target }} --features ecdsa-core
      - run: cargo build --release --target ${{ matrix.target }} --features ecdsa
      - run: cargo build --release --target ${{ matrix.target }} --features keccak256
      - run: cargo build --release --target ${{ matrix.target }} --features sha256
      - run: cargo build --release --target ${{ matrix.target }} --features ecdsa,keccak256
      - run: cargo build --release --target ${{ matrix.target }} --features ecdsa,sha256
      - run: cargo build --release --target ${{ matrix.target }} --all-features

  benches:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.44.0 # MSRV
          - stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - run: cargo build --all-features --benches

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust: 1.44.0 # MSRV
            target: i686-unknown-linux-gnu # 32-bit Linux
            deps: sudo apt install gcc-multilib # 32-bit support packages
          - rust: 1.44.0 # MSRV
            target: x86_64-unknown-linux-gnu
            deps: true
          - rust: stable
            target: i686-unknown-linux-gnu # 32-bit Linux
            deps: sudo apt install gcc-multilib # 32-bit support packages
          - rust: stable
            target: x86_64-unknown-linux-gnu
            deps: true
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
        override: true
    - run: ${{ matrix.deps }}
    - run: cargo check --target ${{ matrix.target }} --all-features
    - run: cargo test --target ${{ matrix.target }} --no-default-features
    - run: cargo test --target ${{ matrix.target }}
    - run: cargo test --target ${{ matrix.target }} --features field-montgomery
    - run: cargo test --target ${{ matrix.target }} --all-features
